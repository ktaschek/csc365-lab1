// CSC 365
// Lab 1-a test suite

// Student Queries

// TC-1
// Tests Requirements R1, R2, R3, R4
// short form command name, existing student
// expected output: HAVIR,BOBBIE,2,108,HAMER,GAVIN

S: HAVIR

// TC-2
// Tests Requirements R3, R4
// short form command name, non-existing student
// expected output: <empty line>

S: NEMO

// TC-3
// Tests Requirements R3, R4
// Long form command name, existing student
// expected output: HAVIR,BOBBIE,2,108,HAMER,GAVIN

Student: HAVIR

// TC-4
// Tests Requirements R3, R4
// Long form command name, non-existing student
// expected output: <empty line>

Student: NEMO

// Student Queries with Bus Parameter

// TC-5
// Tests Requirements R3, R5
// short form command name with short form parameter, existing student
// expected output: HAVIR,BOBBIE,0

S: HAVIR B

// TC-6
// Tests Requirements R3, R5
// short form command name with short form parameter, non-existing student
// expected output: <empty line>

S: NEMO B

// TC-7
// Tests Requirements R3, R5
// short form command name with long form parameter, existing student
// expected output: HAVIR,BOBBIE,0

S: HAVIR Bus

// TC-8
// Tests Requirements R3, R5
// short form command name with long form parameter, non-existing student
// expected output: <empty line>

S: NEMO Bus

// TC-9
// Tests Requirements R3, R5, E1
// short form command name with invalid parameter, existing student
// expected output: Invalid query


S: Havir xxx

// TC-10
// Tests Requirements R3, R5, E1
// short form command name with invalid parameter, non-existing student
// expected output: Invalid query

S: Nemo xxx

// Teacher Queries

// TC-11
// Tests Requirements R3, R6
// short form command, existing teacher
// expected output: LIBRANDI, TODD
//                  HAVIR, BOBBIE
//                  SARAO, DIEDRA
//                  VANCOTT,MIKE
//                  WICINSKY,TERESE
//                  KOZOLA,BUSTER
//                  MULLINGS,LEIGHANN
//                  BUSSMANN,BILLY
//                  BERBES,DICK
//                  MULGREW,RANDELL
//                  TOWLEY,LANE

T: HAMER

// TC-12
// Tests Requirements R3, R6
// short form command, non-existing teacher
// expected output: <empty line>

T: NEMO

// TC-13
// Tests Requirements R3, R6
// long form command, existing teacher
// expected output: LIBRANDI, TODD
//                  HAVIR, BOBBIE
//                  SARAO, DIEDRA
//                  VANCOTT,MIKE
//                  WICINSKY,TERESE
//                  KOZOLA,BUSTER
//                  MULLINGS,LEIGHANN
//                  BUSSMANN,BILLY
//                  BERBES,DICK
//                  MULGREW,RANDELL
//                  TOWLEY,LANE

Teacher: HAMER

// TC-14
// Tests Requirements R3, R6
// long form command, non-existing teacher
// expected output: <empty line>

Teacher: NEMO

// Grade Queries

// TC-15
// Tests Requirements R3, R7
// short form command, existing grade
// expected output: SAELEE,DANILO
//                  GARTH,JOHN

G: 1

// TC-16
// Tests Requirements R3, R7
// long form command, existing grade
// expected output: SAELEE,DANILO
//                  GARTH,JOHN

Grade: 1

// TC-17
// Tests Requirements R3, R7, E1
// short form command, non-existing grade
// expected output: Invalid Grade

G: 1000

// TC-18
// Tests Requirements R3, R7, E1
// long form command, non-existing grade
// expected output: Invalid Grade

Grade: 1000

// TC-19
// Tests Requirements R3, R7
// short form command, existing grade, no students
// expected output: <empty line>

G: 0

// TC-20
// Tests Requirements R3, R7
// long form command, existing grade, no students
// expected output: <empty line>

Grade: 0

// Bus Queries

// TC-20
// Tests Requirements R3, R8
// short form command, existing bus
// expected output: SCHOENECKER,PHUONG,6,109
//                  FINCHMAN,MATHILDA,6,111
//                  BRODERSEN,HYE,3,110
//                  HAVIR,BOBBIE,2,108
//                  MASSART,ELDON,4,105
//                  GARTH,JOHN,1,103
//                  CREMEANS,RANDOLPH,6,109
//                  KREESE,CARRIE,6,109

B: 0

// TC-21
// Tests Requirements R3, R8
// long form command, existing bus
// expected output: SCHOENECKER,PHUONG,6,109
//                  FINCHMAN,MATHILDA,6,111
//                  BRODERSEN,HYE,3,110
//                  HAVIR,BOBBIE,2,108
//                  MASSART,ELDON,4,105
//                  GARTH,JOHN,1,103
//                  CREMEANS,RANDOLPH,6,109
//                  KREESE,CARRIE,6,109

Bus: 0

// TC-22
// Tests Requirements R3,R8
// short form command, non-existing bus
// expected output: <empty line>

B: 1000

// TC-23
// Tests Requirements R3, R8
// long form command, non-existing bus
// expected output: <empty line>

Bus: 1000

// Grade Queries with Parameter

// TC-24
// Tests Requirements R3, R9
// short form command with short form high parameter, existing grade
// expected output: GARTH,JOHN,3.14,FALKER,ADOLPH,0

G: 1 H

// TC-25
// Tests Requirements R3, R9
// short form command with long form high parameter, existing grade
// expected output: GARTH,JOHN,3.14,FALKER,ADOLPH,0

G: 1 High

// TC-26
// Tests Requirements R3, R9
// short form command with short form low parameter, existing grade
// expected output: SAELEE,DANILO,3.14,FALKER,ADOLPH,54

G: 1 L

// TC-27
// Tests Requirements R3, R9
// short form command with long form low parameter, existing grade
// expected output: SAELEE,DANILO,3.14,FALKER,ADOLPH,54

G: 1 Low

// TC-28
// Tests Requirements R3, R9, E1
// short form command with short form high parameter, non-existing grade
// expected output: Invalid Grade

G: 1000 H

// TC-29
// Tests Requirements R3, R9, E1
// short form command with long form high parameter, non-existing grade
// expected output: Invalid Grade

G: 1000 High

// TC-30
// Tests Requirements R3, R9, E1
// short form command with short form low parameter, non-existing grade
// expected output: Invalid Grade

G: 1000 L

// TC-31
// Tests Requirements R3, R9, E1
// short form command with long form low parameter, non-existing grade
// expected output: Invalid Grade

G: 1000 Low

// Average Queries 

// TC-32
// Tests Requirements R3, R10
// short form command, existing grade
// expected output: 1,3.0

A: 1

// TC-33
// Tests Requirements R3, R10
// long form command, existing grade
// expected output: 1,3.0

Average: 1

// TC-34
// Tests Requirements R3, R10, E1
// short form command, non-existing grade
// expected output: Invalid Grade

A: 1000

// TC-35

// Tests Requirements R3, R10, E1
// long form command, non-existing grade
// expected output: Invalid Grade

Average: 1000

// TC-36
// Tests Requirements R3, R10
// short form command, existing grade, no students
// expected output: No students in grade

A: 0

// TC-37
// Tests Requirements R3, R10
// long form command, existing grade, no students
// expected output: No students in grade

Average: 0

// Info Queries

// TC-38
// Tests Requirements R3, R11
// short form command
// expected output: 0: 0
//                  1: 2
//                  2: 13
//                  3: 9
//                  4: 15
//                  5: 0
//                  6: 21

I

// TC-39
// Tests Requirements R3, R11
// long form command
// expected output: 0: 0
//                  1: 2
//                  2: 13
//                  3: 9
//                  4: 15
//                  5: 0
//                  6: 21

Info

// Quit Queries

// TC-40
// Tests Requirements R3, R12
// short form command
// expected output: Exiting... <Quits>

Q

// TC-41
// Tests Requirements R3, R12
// long form command
// expected output: Exiting... <Quits>

Quit

// Query Errors

// TC-42
// Tests Requirements E1
// invalid query
// expected output: Invalid query
//
//                  Enter a query:

sadhjkaskjdhkjas:

// Error Checking Queries (manually invoked)

// File Errors
// TC-43
// Tests Requirements E1
// students.txt does not exist in the same folder as schoolsearch.py
// expected output: Unable to find students.txt <Exits>

// Format Errors
// TC-44
// Tests Requirements E1
// students.txt is not in the correct format (missing comma line 1)
// expected output: Invalid format on line 1 <Exits>

// TC-45
// Tests Requirements E1
// students.txt is not in the correct format (missing field line 1)
// expected output: Invalid format on line 1 <Exits>

// TC-46
// Tests Requirements E1
// students.txt is not in the correct format (grade is not an integer line 1)
// expected output: Invalid format on line 1 <Exits>

// TC-47
// Tests Requirements E1
// students.txt is not in the correct format (classroom is not an integer line 1)
// expected output: Invalid format on line 1 <Exits>

// TC-48
// Tests Requirements E1
// students.txt is not in the correct format (bus is not an integer line 1)
// expected output: Invalid format on line 1 <Exits>

// TC-49
// Tests Requirements E1
// students.txt is not in the correct format (GPA is not a float line 1)
// expected output: Invalid format on line 1 <Exits>